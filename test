 import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import CheckableDataTable from './CheckableDataTable';

describe('CheckableDataTable', () => {
  const tableData = [
    // Your sample data here
  ];

  test('renders CheckableDataTable component', () => {
    render(<CheckableDataTable tableData={tableData} />);
    // Add assertions based on your component rendering
    expect(screen.getByText('Add')).toBeInTheDocument();
    // Add more assertions based on your UI
  });

  test('handles row check change', () => {
    render(<CheckableDataTable tableData={tableData} />);
    // Trigger a row check change
    fireEvent.click(screen.getByLabelText('Select all'));
    // Add assertions based on the expected behavior after the row check change
    expect(screen.getByLabelText('Select all')).toBeChecked();
    // Add more assertions based on your UI
  });

  test('handles page change', () => {
    render(<CheckableDataTable tableData={tableData} />);
    // Trigger a page change
    fireEvent.click(screen.getByText('2')); // Example: assuming there is a pagination with '2' as the second page
    // Add assertions based on the expected behavior after the page change
    expect(screen.getByText('2')).toHaveClass('selected'); // Assuming there is a visual indication for the selected page
    // Add more assertions based on your UI
  });

  // Add more test cases based on your component's functionality
});
