 ({
  striped,
  bordered,
  small,
  checkable
}) => {
  const [state, setState] = React.useState({
    rows: {
      items: {
        sainsBury: {
          cells: [{
            label: 'Jan 05, 2020'
          }, {
            label: 'SAINSBURY’S ONLINE-GOL LON'
          }, {
            label: '$8.76',
            align: 'right'
          }],
          checked: false
        },
        onlinePayment: {
          cells: [{
            label: 'Mar 16, 2020'
          }, {
            label: 'Online Payment'
          }, {
            label: '$300.00',
            align: 'right'
          }],
          checked: true
        },
        swiss: {
          cells: [{
            label: 'Apr 14, 2020'
          }, {
            label: 'SWISS Intl Air LinesBasel CH'
          }, {
            label: '$5,000.00',
            align: 'right'
          }],
          checked: false
        },
        musicEnterprise: {
          cells: [{
            label: 'Oct 01, 2020'
          }, {
            label: 'Music Enterprise In'
          }, {
            label: '$10.67',
            align: 'right'
          }],
          checked: true
        },
        martins: {
          cells: [{
            label: 'Mar 15, 2020'
          }, {
            label: 'Martin’s News Shops Wellington'
          }, {
            label: '$32.99',
            align: 'right'
          }],
          checked: true
        }
      },
      order: ['sainsBury', 'onlinePayment', 'swiss', 'musicEnterprise', 'martins']
    }
  });
  const handleRowCheckChange = (event, {
    id
  }) => {
    setState(oldState => {
      const previousRowState = oldState.rows.items[id];
      const newSate = {
        rows: {
          ...state.rows,
          items: {
            ...oldState.rows.items
          }
        }
      };
      newSate.rows.items[id] = {
        ...previousRowState,
        checked: !previousRowState.checked
      };
      return newSate;
    });
  };
  const handleHeaderRowCheckChange = (event, {
    checked
  }) => {
    setState(oldState => {
      const newSate = {
        rows: {
          ...state.rows,
          items: {
            ...oldState.rows.items
          }
        }
      };
      state.rows.order.forEach(rowKey => {
        const previousRowState = oldState.rows.items[rowKey];
        newSate.rows.items[rowKey] = {
          ...previousRowState,
          checked: !checked
        };
      });
      return newSate;
    });
  };
  return <div>
          <DataTableV2 id="tablev2-checkbox-instance" checkable={true} onRowCheckChange={handleRowCheckChange} onHeaderRowCheckChange={handleHeaderRowCheckChange} striped={striped} bordered={bordered} small={small}>
            <DataTableHeadV2>
              <DataTableRowV2 checkboxLabel="Select all" id="tablev2-checkbox-header-row">
                <DataTableHeadCellV2>Date</DataTableHeadCellV2>
                <DataTableHeadCellV2>Description</DataTableHeadCellV2>
                <DataTableHeadCellV2 align="right">Amount</DataTableHeadCellV2>
              </DataTableRowV2>
            </DataTableHeadV2>
            <DataTableBodyV2>
              {state.rows.order.map((rowKey, index) => {
          const rowData = state.rows.items[rowKey];
          return <DataTableRowV2 key={rowKey} id={rowKey} rowIndex={index + 2} checked={rowData.checked} checkboxLabel={rowData.cells[1].label}>
                    {rowData.cells.map(cell => <DataTableCellV2 align={cell.align} key={cell.label}>
                        {cell.label}
                      </DataTableCellV2>)}
                  </DataTableRowV2>;
        })}
            </DataTableBodyV2>
          </DataTableV2>
        </div>;
}
