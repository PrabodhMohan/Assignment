 https://teams.microsoft.com/dl/launcher/launcher.html?url=%2F_%23%2Fl%2Fmeetup-join%2F19%3Ameeting_Mjg3M2U3ODgtY2U5ZS00M2Q2LWI4NTItZTZjZTEwODljMDFl%40thread.v2%2F0%3Fcontext%3D%257b%2522Tid%2522%253a%2522dc546f40-1115-4c67-b3bf-6aac8454ea3e%2522%252c%2522Oid%2522%253a%25223198343f-a4a7-4e8e-9460-b5ffdb729c5e%2522%257d%26anon%3Dtrue&type=meetup-join&deeplinkId=a399bc7c-d718-4d04-9d09-4a0cf8ac4411&directDl=true&msLaunch=true&enableMobilePage=true&suppressPrompt=true
import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import CheckboxList from './CheckboxList';

describe('CheckboxList', () => {
  const list = [
    { name: 'Option 1', checked: false },
    { name: 'Option 2', checked: true },
    { name: 'Option 3', checked: false },
  ];

  test('renders CheckboxList component with provided list', () => {
    const { getByLabelText } = render(<CheckboxList list={list} />);
    
    // Check if checkboxes are rendered
    list.forEach(item => {
      expect(getByLabelText(item.name)).toBeInTheDocument();
    });
  });

  test('handles checkbox click event', () => {
    const { getByLabelText } = render(<CheckboxList list={list} />);
    
    // Click on a checkbox
    fireEvent.click(getByLabelText('Option 1'));
    
    // Check if the state is updated correctly
    expect(getByLabelText('Option 1')).toBeChecked();
    
    // Click on another checkbox
    fireEvent.click(getByLabelText('Option 3'));
    
    // Check if the state is updated correctly
    expect(getByLabelText('Option 3')).toBeChecked();
  });

  // Add more test cases as needed to cover different scenarios
});
