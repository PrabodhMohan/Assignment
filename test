 https://teams.microsoft.com/dl/launcher/launcher.html?url=%2F_%23%2Fl%2Fmeetup-join%2F19%3Ameeting_Mjg3M2U3ODgtY2U5ZS00M2Q2LWI4NTItZTZjZTEwODljMDFl%40thread.v2%2F0%3Fcontext%3D%257b%2522Tid%2522%253a%2522dc546f40-1115-4c67-b3bf-6aac8454ea3e%2522%252c%2522Oid%2522%253a%25223198343f-a4a7-4e8e-9460-b5ffdb729c5e%2522%257d%26anon%3Dtrue&type=meetup-join&deeplinkId=a399bc7c-d718-4d04-9d09-4a0cf8ac4411&directDl=true&msLaunch=true&enableMobilePage=true&suppressPrompt=true


import React, { useState } from 'react';
import {
  Card, BreadcrumbTrail, Breadcrumb, Heading,
  ButtonPrimary, Input,
  AccentBar, Collapsible,
  Modal, ModalHeader, CollapsibleContent, CollapsiblePanel, ModalBody, ModalFooter,
  DataTable, DataTableBody, DataTableHead, DataTableRowCell, DataTableRow,
  DataTableHeadCell, MultiStepTracker, Step,
} from '@americanexpress/dls-react';
import DropDown from './DropDown';
import data from '../json/reportConfigurationData.json';
import CheckboxList from './CheckboxList';

const CloneConfiguarion = () => {
  // const [selectedModuleValue, setSelectedModuleValue] = useState('Select');
  // const [selectedTableValue, setSelectedTableValue] = useState('Select');

  const [stepTracker, setStepTracker] = useState(1);
  const [open, setOpen] = useState(['panel1']);
  const [level, setLevel] = useState('');
  const [showConfigModal, setShowConfigModal] = useState(false);
  const [isButtonClicked, setIsButtonClicked] = useState(0);
  // const [mdrmCheckboxState, setMdrmCheckboxState] = useState([true, true, true, true]);

  const buttonLists = [
    { id: 'Report', title: 'Report' },
    { id: 'Portfolio', title: 'Report and Portfolio level' },
    { id: 'MDRM', title: 'Report Portfolio and MDRM level' },
  ];

  const portfolioList = [
    { id: 'cash', name: 'Cash', checked: true },
    { id: 'deposit', name: 'Deposit', checked: true },
    { id: 'repo', name: 'Repo', checked: true },
    { id: 'investment', name: 'Investment', checked: true },
    { id: 'loan', name: 'Loan', checked: true },
    { id: 'cards', name: 'Cards', checked: true },
  ];

  const moduleList = [
    { id: 'rms', name: 'RMS', checked: true },
    { id: 'rulesFramework', name: 'DepRules Framework', checked: true },
    { id: 'glFramework', name: 'GL Framework', checked: true },
  ];

  const rmsTableList = [
    { id: 'reportConditions', name: 'Report Conditions', checked: true },
    { id: 'reportConfig', name: 'Report Config', checked: true },
    { id: 'mdrmList', name: 'MDRM List', checked: true },
  ];

  const rulesTableList = [
    { id: 'table1', name: 'Table1', checked: true },
    { id: 'table2', name: 'Table2', checked: true },
    { id: 'table3', name: 'Table3', checked: true },
  ];

  const handleStepTracker = (step) => {
    setStepTracker(Number(step + 1));
    setOpen([`panel${step + 1}`]);
  };

  const onCollapsibleHeadingClick = (evt, selectedPanelId) => {
    let openList = [];
    if (open.includes(selectedPanelId)) {
      openList = open.filter((elem) => elem !== selectedPanelId);
    } else {
      openList = [...open, selectedPanelId];
    }
    setOpen(openList);
    // setPanelId(selectedPanelId)
  };

  const handleOnActionClick = (levelClick) => {
    setIsButtonClicked(levelClick);
    setLevel(levelClick);
    setStepTracker(Number(1));
    setOpen(['panel1']);
  };

  // const labelCallback = (currentStep, totalSteps) => `${currentStep} of ${totalSteps}`;

  return (
    <div style={{ marginLeft: '250px' }}>
      <div className="pad-1">
        <BreadcrumbTrail className="margin-1">
          <Breadcrumb href="/usreg">USREG</Breadcrumb>
          <Breadcrumb>Common</Breadcrumb>
          <Breadcrumb>Clone-Configuration</Breadcrumb>
          <Breadcrumb>{level}</Breadcrumb>
        </BreadcrumbTrail>
        <Heading level={1} headingStyle="heading5" className="text-align-center">
          Clone Configuration
        </Heading>
        <div className="margin-1">
          {buttonLists.map((button) => (
            <ButtonPrimary
              key={button.id}
              id={button.id}
              size="md"
              className="margin-2-r"
              style={{ backgroundColor: button.id === isButtonClicked ? 'green' : '' }}
              onClick={() => handleOnActionClick(button.id)}
            >
              {button.title}
            </ButtonPrimary>
          ))}
        </div>
        {level !== ''
        && (
        <div>
          <Heading level={2} headingStyle="heading4" className="text-align-center">
            {level} Level
          </Heading>
          <div className="margin-1">
            <MultiStepTracker currentStep={stepTracker || 4}>
              <Step label="Step1" />
              <Step label="Step2" />
              <Step label="Step3" />
              <Step label="Step4" />
            </MultiStepTracker>;
          </div>

          <div id="report">
            <Card className="margin-1" showAccentBar={true} style={{ boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)' }}>
              <div className="margin-1">
                <Collapsible
                  open={open}
                  defaultOpen={['panel1']}
                  onCollapsibleHeadingClick={onCollapsibleHeadingClick}
                >
                  <CollapsiblePanel id="panel1">
                    <Heading level={3} headingStyle="heading4">Step1</Heading>
                  </CollapsiblePanel>
                  <CollapsibleContent labelledBy="panel1">
                    <div className="flex flex-align-end">
                      <DropDown
                        label="Select Source Report"
                        list={data.rms.reportsData}
                      />
                      <DropDown
                        label="Select Target Report"
                        list={data.rms.reportsData}
                      />
                      <div style={{ marginBottom: '10px' }}>
                        <ButtonPrimary
                          size="sm"
                          className="margin-2-r"
                          onClick={() => handleStepTracker(1)}
                        >
                          Move to Step 2
                        </ButtonPrimary>
                      </div>
                    </div>

                  </CollapsibleContent>
                </Collapsible>
              </div>
              {/* <Label>Step1</Label> */}

              <div>
                {/* <AccentBar /> */}
                {/* <br /> */}
                <AccentBar
                  theme={{
                    backgroundColor: '#00175a !important',
                  }}
                />
              </div>
              <div className="margin-1">
                <Collapsible
                  open={open}
                  onCollapsibleHeadingClick={onCollapsibleHeadingClick}
                >
                  <CollapsiblePanel id="panel2">
                    <Heading level={3} headingStyle="heading4">Step2</Heading>
                  </CollapsiblePanel>
                  <CollapsibleContent labelledBy="panel2">
                    {level === 'Report'
                    && (
                    <>
                      <div className="margin-1 font-weight-medium">Select Module</div>
                      <CheckboxList list={moduleList} />
                    </>
                    )}
                    {level === 'MDRM'
                    && (
                    <>
                      <div className="margin-1 font-weight-medium">Select Module</div>
                      <CheckboxList list={moduleList} />
                    </>
                    )}
                    {level === 'Portfolio'

                  && (
                  <>
                    <div className="margin-1 font-weight-medium">Select Portfolio</div>
                    <CheckboxList list={portfolioList} />
                  </>
                  )}
                    <div style={{ marginBottom: '10px' }}>
                      <ButtonPrimary
                        size="sm"
                        className="margin-1"
                        onClick={() => handleStepTracker(2)}
                      >
                        Move to Step 3
                      </ButtonPrimary>
                    </div>
                  </CollapsibleContent>
                </Collapsible>
              </div>

              <div>
                <AccentBar
                  theme={{
                    backgroundColor: '#00175a !important',
                  }}
                />
              </div>

              <div className="margin-1">
                <Collapsible
                  open={open}
                  onCollapsibleHeadingClick={onCollapsibleHeadingClick}
                >
                  <CollapsiblePanel id="panel3">
                    <Heading level={3} headingStyle="heading4">Step3</Heading>
                  </CollapsiblePanel>
                  <CollapsibleContent labelledBy="panel3">
                    {level === 'Report'
                    && (
                    <div className="flex">
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select RMS Table
                        <CheckboxList list={rmsTableList} />
                      </div>
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select Rules Table
                        <CheckboxList list={rulesTableList} />
                      </div>
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select GLFrame Table
                        <CheckboxList list={rulesTableList} />
                      </div>
                    </div>
                    )}
                    {level === 'MDRM'
                    && (
                    <div className="flex">
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select RMS Table
                        <CheckboxList list={rmsTableList} />
                      </div>
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select GLFrame Table
                        <CheckboxList list={rulesTableList} />
                      </div>
                    </div>
                    )}
                    {level === 'Portfolio'
                    && (
                    <>
                      <div className="margin-1 font-weight-medium">Select Module</div>
                      <CheckboxList list={moduleList} />
                    </>
                    )}
                    <div style={{ marginBottom: '10px' }}>
                      <ButtonPrimary
                        size="sm"
                        className="margin-2-r"
                        onClick={() => handleStepTracker(3)}
                      >
                        Move to Step 4
                      </ButtonPrimary>
                    </div>
                  </CollapsibleContent>
                </Collapsible>
                {/* <Label>Step3</Label> */}

              </div>
              <div>
                <AccentBar
                  theme={{
                    backgroundColor: '#00175a !important',
                  }}
                />
              </div>
              <div className="margin-1">
                <Collapsible open={open} onCollapsibleHeadingClick={onCollapsibleHeadingClick}>
                  <CollapsiblePanel id="panel4">
                    <Heading level={3} headingStyle="heading4">Step4</Heading>
                  </CollapsiblePanel>
                  <CollapsibleContent labelledBy="panel4">
                    {level === 'Portfolio'
                    && (
                    <div className="flex ">
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select RMS Table
                        <CheckboxList list={rmsTableList} />
                      </div>
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select Rules Table
                        <CheckboxList list={rulesTableList} />

                      </div>
                      <div className="margin-1 font-weight-medium" style={{ width: '33%' }}>Select GLFrame Table
                        <CheckboxList list={rulesTableList} />
                      </div>
                    </div>
                    )}
                    <div>
                      <ButtonPrimary size="sm" className="margin-2" onClick={() => setShowConfigModal(!showConfigModal)}>
                        Create Config
                      </ButtonPrimary>
                    </div>
                  </CollapsibleContent>
                </Collapsible>
              </div>
            </Card>
          </div>
        </div>
        )}
      </div>
      {showConfigModal && (
      <Modal
        id="modal-example"
        aria-labelledby="modal-header"
        aria-describedby="modal-body"
        onClose={() => setShowConfigModal(!showConfigModal)}
      >
        <ModalHeader
          id="modal-header"
        >
          <h2 className="fluid heading-3">MDRM mapping for new report</h2>
        </ModalHeader>
        <ModalBody id="modal-body">
          <div className="pad-3">
            <Card type="standard" showAccentBar="true">
              <DataTable id="table-base-instance" striped={false} bordered={true} size="sm">
                <DataTableHead>
                  <DataTableHeadCell>
                    <h3 className="text-align-center">Source Report - Y9c</h3>
                  </DataTableHeadCell>
                  <DataTableHeadCell><h3 className="text-align-center">New Report - Y9c</h3></DataTableHeadCell>
                </DataTableHead>
                <DataTableBody>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC100</p>
                    </DataTableRowCell>
                    <DataTableRowCell style={{ width: '80%' }}>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC200</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC300</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC400</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC500</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC600</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC700</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>

                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                  <DataTableRow>
                    <DataTableRowCell>
                      <p className="text-align-center">MDRM-BHC800</p>
                    </DataTableRowCell>
                    <DataTableRowCell>

                      <Input
                        id="input-2"
                        name="10cMDRM"
                        type="text"
                        value=""
                      />

                    </DataTableRowCell>
                  </DataTableRow>
                </DataTableBody>
              </DataTable>
            </Card>
          </div>
        </ModalBody>
        <ModalFooter>
          <ButtonPrimary className="margin-1">
            Save
          </ButtonPrimary>
          <ButtonPrimary className="margin-1" onClick={() => setShowConfigModal(!showConfigModal)}>
            Cancel
          </ButtonPrimary>
        </ModalFooter>
      </Modal>
      )}
    </div>
  );
};

export default CloneConfiguarion;

